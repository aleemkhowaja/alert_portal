function pwsWebServiceExplorerOnGridCompleteFn(event,data,id)
{
	webServiceExplorerOnGridCompleteFn(event,data);
	var formId = "webServiceGuiGridForm_"+_pageRef;
	var gridSelectorName = data.id;
	var grid = $("#"+gridSelectorName);
	var ids = grid.jqGrid('getDataIDs');
	loadSubGridData(grid,ids);
	var returnGridObjectFromColumnId = null;
	var ids = grid.jqGrid('getDataIDs');
	for (var i = 0; i < ids.length; i++) 
	{
		var checkVal = grid.jqGrid('getCell', ids[i], 'checkGridRow');
		if ("" != checkVal && undefined != checkVal && null != checkVal) 
		{
			updateSelectOption(ids[i]);
		}
	}
}

//function pwsWebServiceExplorerOnGridCompleteFn(event,data,id)
//{
//	webServiceExplorerOnGridCompleteFn(event,data);
//	var formId = "webServiceGuiGridForm_"+_pageRef;
//	var gridSelectorName = data.id;
//	var grid = $("#"+gridSelectorName);
//	var ids = grid.jqGrid('getDataIDs');
//	var returnGridObjectFromColumnId = null;
//	var ids = grid.jqGrid('getDataIDs');
//	rowActions(grid,ids);
//}
//
//function rowActions(grid,ids,fn)
//{
//	for (var i = 0; i < ids.length; i++) 
//	{
//		var checkVal = grid.jqGrid('getCell', ids[i], 'checkGridRow');
//		var fieldType = grid.jqGrid('getCell', ids[i], 'fieldType');
//		var fieldName = grid.jqGrid('getCell', ids[i], 'fieldName');
//		var loadSubGrid = grid.jqGrid('getCell', ids[i], 'loadSubGrid');
//		var value = grid.jqGrid('getCell', ids[i], 'value');
//		if (("" != checkVal && undefined != checkVal && null != checkVal) && (value == undefined || value == "")) 
//		{
//			try{
//				grid.jqGrid('setSelection', ids[i], true);
//				//grid.jqGrid("setCellValue",ids[i], "checkGridRow", "");
//			}
//			catch(e)
//			{
//				console.log(e);
//			}
//		}
//		if (loadSubGrid == "1") 
//		{
//			var rowObj = $("#"+ids[i]);
//			type = checkForType(fieldType);
//			if (type == "HashMap") {
//				loadDynamicSubGrid(rowObj, 'HashMap');
//			} else if (type == "List") {
//				loadDynamicSubGrid(rowObj, 'List');
//			} else if (type == "List<Object>") {
//				loadDynamicSubGrid(rowObj, 'List<Object>');				
//			} else if (!isNonPrimativeDataType(fieldType)) {
//				//Case Of Object
//				loadSubGridEvent(null, rowObj);
//			}
//		}
//	}
//	if(undefined != fn)
//	{
//		fn();		
//	}
//}

function onPwsExplorerRowSelTopic(rowObj)
{
	onRowSelTopic(rowObj);
	var fieldType = grid.jqGrid('getCell', rowObj.originalEvent.id, 'fieldType');
	var fieldName = grid.jqGrid('getCell', rowObj.originalEvent.id, 'fieldName');
	var gridId = rowObj.currentTarget.id;
	var selectId = undefined;
	if(undefined != gridId && gridId.includes("_response"))
	{
		selectId = fieldName+"_"+_pageRef+"_response_mappingField";
		$("#"+selectId).children().first().remove();
		$("#"+selectId).prepend('<option value="'+fieldName+'"> '+fieldName+' </option>');
		$("#"+selectId).prepend('<option selected="selected"></option>');
	}
	else{
		rowId = rowObj.originalEvent.id;
		selectId = rowId+"_mappingField";
		$("#"+selectId).children().first().remove();
		$("#"+selectId).prepend('<option value="'+fieldName+'"> '+fieldName+' </option>');
		//$("#"+selectId).prepend('<option></option>').val(fieldName).html(fieldName)
		$("#"+selectId).prepend('<option selected="selected"></option>');
	}
	
    /*
	if(!isNonPrimativeDataType(fieldType))
    {
    	grid.jqGrid('setCellReadOnly', rowObj.originalEvent.id, 'mappingField', "true");
    }
    */
    
}

function applyOnMappingChange(e)
{
	var rowId = returnRowIdFromColumnId(e.currentTarget.id);
    var idArr = rowId.split("_");
    if(idArr.length<3)
    {
		var grid = returnGridObjectFromColumnId(e.currentTarget.id);
		//grid.jqGrid('setCellReadOnly', getGridIdFromRow(e.currentTarget.id), 'mappingField', "true");
		grid.jqGrid('setCellValue', rowId, 'expressionHiddenField', "");
		$("#expressionTextArea_"+_pageRef).val("");
    }
	onMappingFieldChange(e);
}
